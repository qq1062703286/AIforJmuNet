游戏源代码：

#include "game.h"
void InitBoard(char arr[ROW][COL], int row, int col)   
{
	int i = 0;                          
	int j = 0;
 
	for(i=0; i<row; i++)
	{
		for(j=0; j<col; j++)        //遍历二维数组
		{
			arr[i][j] = ' ';        //初始化二维数组
		}
	}
}
 
void DisplayBoard(char arr[ROW][COL],int row, int col)   
{
	int i = 0;
	int j = 0;
 
	for(i=0; i<row; i++)                                //遍历二维数组
	{
		for(j=0; j<col; j++)
		{
			printf(" %c ", arr[i][j]);
			if(j<col-1)                                 //边界处不需要棋盘边框      
				printf("|");                           
		}
		printf("\n");
		if(i<row-1)                                     //边界处不需要棋盘边框
		{
			for(j=0; j<col; j++)
			{
				printf("---");
				if(j<col-1)
					printf("|");
			}
		}
		printf("\n");
	}
}
 
void PlayerMove(char arr[ROW][COL],int row, int col)
{
	int x = 0;
	int y = 0;
	
	printf("玩家走：\n");
	while(1)
	{
		printf("请输入坐标：");
		scanf("%d%d", &x, &y);
		if((x>=1 && x<=3)&&((y>=1 && x<=3)))                     //保证玩家输入坐标正确性
		{
			if(arr[x-1][y-1] == ' ')                             //玩家输入坐标与二维数组下标之间相差1
		{
			arr[x-1][y-1] = '*';                                 //如果为空，即未被占用，则赋值为字符X
			break;
		}
			else
		{
			printf("坐标已被占用\n");                            //被占用提示
		}
	}
		else                                                     //不在if语句限值之内即非法
		{
			printf("坐标非法\n"); 
		}                         
	}
}
 
void ComputerMove(char arr[ROW][COL],int row, int col)           //电脑落子
{
	int x = 0;
	int y = 0;
	printf("电脑走：>\n");
	while(1)
	{
		x=rand() % 3;                                              
     	y=rand() % 3;
		if(arr[x][y] == ' ')                                
		{
			arr[x][y] = 'o';                                    
			break;
		}
	}
	printf("电脑坐标：%d %d\n", x+1, y+1);
}    
 

static int IsFull(char arr[ROW][COL],int row, int col)  
{
	int i = 0;
	int j = 0;
 
	for(i=0; i<row; i++)                                //遍历二维数组
	{
		for(j=0; j<col; j++)
		{
			if(arr[i][j] == ' ')                        //判断是否仍有空值
				return 0;                               //有空值返回0
		}
	}
	return 1;                                           //无空值返回1
}
 
char IsWin(char arr[ROW][COL],int row, int col)         //判断胜负
{
	int i = 0;
	for(i=0; i<row; i++)                                //判断行  是否能胜利
	{
		if(arr[i][0]==arr[i][1] && arr[i][1]==arr[i][2] && arr[i][0]!=' ')
		{
			return arr[i][0];                           //若三子相同,且不能为空，返回元素内值
		}
	} 
 
	for(i=0; i<col; i++)                                //判断列  是否能胜利
	{
		if(arr[0][i]==arr[1][i] && arr[1][i]==arr[2][i] && arr[1][i]!=' ')
		{
			return arr[1][i];
		}
	}
 
	if(arr[0][0]==arr[1][1] && arr[1][1]==arr[2][2] && arr[1][1] != ' ')   //判断正对角线能否胜利
	{
		return arr[1][1];
	}
 
	if(arr[0][2]==arr[1][1] && arr[1][1]==arr[2][0] && arr[1][1] != ' ')   //判断反对角线能否胜利
	{
		return arr[1][1];
	}
 
	if(IsFull(arr, row, col))                                              //判定平局
	{
		return 'Q';
	}
	return  ' ';                                     //继续
}

测试源代码：
#include <stdio.h>
#include "game.h"
#include <time.h>
#include <stdlib.h>
 
void game()
{
	char board[ROW][COL] = {0};       
	char ret = 0;                     
	InitBoard(board, ROW, COL);       
	DisplayBoard(board, ROW, COL);    
	while(1)                          
	{
		PlayerMove(board, ROW, COL);  //玩家走，定义函数
		ret = IsWin(board, ROW, COL); //判定胜负
		if(ret != ' ')                //如果此二维数组内元素未定义，即为空，在执行下面的电脑走
		{
			break;
		}
		DisplayBoard(board, ROW, COL);//玩家走后打印棋盘
		ComputerMove(board, ROW, COL);//电脑走（一定是空白可赋值，见25--28行）
		ret = IsWin(board, ROW, COL); //判定胜负
		if(ret != ' ')                
		{
			break;
		}
		DisplayBoard(board, ROW, COL); 
	}
	if(ret == '0')                    //
	{
		printf("很遗憾，电脑赢啦！！！\n");
	}
	else if(ret == 'X')
	{
		printf("恭喜你，玩家赢啦！！！\n");
	}
	else if(ret == 'Q')
	{
		printf("平局~~~\n");
	}
}
 
 
void test()
{
	int input = 0;                        
	srand((unsigned int)time (NULL));       
	do
	{
		menu();
		printf("请选择：>");            //选择开始游戏
		scanf("%d", &input);            //输入选项
		switch(input)
		{
		case 1:
			game();
			break;
		case 0:
			printf("退出游戏\n");
			break;
		default:
			printf("选择错误，请重新选择！\n");
		}
	}while(input);                  
}
 
int main()
{
	test();
	return 0;
}
头文件代码：
#ifndef __GAME_H__
#define __GAME_H__
#include<stdio.h>
 
#define ROW 3
#define COL 3
 
void InitBoard(char arr[ROW][COL],int row, int col);
void DisplayBoard(char arr[ROW][COL],int row, int col);
void PlayerMove(char arr[ROW][COL],int row, int col);
void ComputerMove(char arr[ROW][COL],int row, int col);
char IsWin(char arr[ROW][COL],int row, int col);
